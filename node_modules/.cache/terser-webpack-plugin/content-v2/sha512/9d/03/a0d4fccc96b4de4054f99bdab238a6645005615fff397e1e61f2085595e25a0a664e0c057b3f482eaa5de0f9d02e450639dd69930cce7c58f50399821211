{"map":"{\"version\":3,\"sources\":[\"/Users/nikitamittal/Documents/PWAProjects/pushercoins/src/Today/Today.js\",\"/Users/nikitamittal/Documents/PWAProjects/pushercoins/src/History/History.js\",\"/Users/nikitamittal/Documents/PWAProjects/pushercoins/src/App.js\",\"/Users/nikitamittal/Documents/PWAProjects/pushercoins/src/serviceWorker.js\",\"/Users/nikitamittal/Documents/PWAProjects/pushercoins/src/index.js\"],\"names\":[\"Today\",\"props\",\"_this\",\"Object\",\"classCallCheck\",\"this\",\"possibleConstructorReturn\",\"getPrototypeOf\",\"call\",\"sendPricePusher\",\"data\",\"axios\",\"post\",\"prices\",\"then\",\"response\",\"console\",\"log\",\"catch\",\"error\",\"state\",\"btcAmount\",\"ethAmount\",\"ltcAmount\",\"pusher\",\"Pusher\",\"cluster\",\"encrypted\",\"subscribe\",\"_this2\",\"navigator\",\"onLine\",\"setState\",\"btcprice\",\"localStorage\",\"getItem\",\"ethprice\",\"ltcprice\",\"setInterval\",\"get\",\"bind\",\"price\",\"BTC\",\"USD\",\"setItem\",\"ETH\",\"LTC\",\"_this$state\",\"react_default\",\"a\",\"createElement\",\"className\",\"PureComponent\",\"History\",\"getETHPrices\",\"date\",\"getBTCPrices\",\"getLTCPrices\",\"getTodayPrice\",\"historyList\",\"t\",\"moment\",\"unix\",\"all\",\"spread\",\"eth\",\"btc\",\"ltc\",\"push\",\"format\",\"toConsumableArray\",\"getYesterdayPrice\",\"subtract\",\"getTwoDaysPrice\",\"getThreeDaysPrice\",\"getFourDaysPrice\",\"length\",\"map\",\"historyData\",\"index\",\"key\",\"App\",\"href\",\"target\",\"rel\",\"src_Today_Today\",\"src_History_History\",\"isLocalhost\",\"Boolean\",\"window\",\"location\",\"hostname\",\"match\",\"registerValidSW\",\"swUrl\",\"config\",\"serviceWorker\",\"register\",\"registration\",\"onupdatefound\",\"installingWorker\",\"installing\",\"onstatechange\",\"controller\",\"onUpdate\",\"onSuccess\",\"ReactDOM\",\"render\",\"src_App_0\",\"document\",\"getElementById\",\"URL\",\"process\",\"origin\",\"addEventListener\",\"concat\",\"fetch\",\"contentType\",\"headers\",\"status\",\"indexOf\",\"ready\",\"unregister\",\"reload\",\"checkValidServiceWorker\"],\"mappings\":\"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\",\"sourcesContent\":[\"/**\\n * Created by Nikita Mittal\\n * 28th Nov 2018\\n */\\n\\nimport React, { PureComponent } from 'react'\\nimport axios from 'axios'\\nimport Pusher from 'pusher-js'\\n\\n//import css\\nimport './Today.css'\\n\\nclass Today extends PureComponent {\\n\\n    constructor(props){\\n        super(props);\\n        this.state = {\\n            btcAmount: '',\\n            ethAmount: '',\\n            ltcAmount: ''\\n        }\\n    }\\n\\n    componentWillMount(){\\n        // establish a connection to Pusher\\n    this.pusher = new Pusher('6abcd4a00181368360ec', {\\n        cluster: 'ap2',\\n        encrypted: true\\n    });\\n    // Subscribe to the 'coin-prices' channel\\n    this.prices = this.pusher.subscribe('coin-prices');\\n        // axios.get('https://min-api.cryptocompare.com/data/pricemulti?fsyms=BTC,ETH,LTC&tsyms=USD')\\n        //         .then(response => {\\n        //             // We set the latest prices in the state to the prices gotten from Cryptocurrency.\\n        //             //console.log(\\\"API calling success\\\", response)\\n        //             this.setState({ btcAmount: response.data.BTC.USD });\\n        //             this.setState({ ethAmount: response.data.ETH.USD });\\n        //             this.setState({ ltcAmount: response.data.LTC.USD });\\n        //         })\\n        //         // Catch any error here\\n        //         .catch(error => {\\n        //             console.log(error)\\n        //         })\\n    }\\n\\n    sendPricePusher =  (data) => {\\n        axios.post('/prices/new', {\\n            prices: data\\n        })\\n          .then(response => {\\n              console.log(response)\\n          })\\n          .catch(error => {\\n              console.log(error)\\n          })\\n     }\\n\\n     componentDidMount () {\\n        if (!navigator.onLine) {\\n            this.setState({ btcprice: localStorage.getItem('BTC') });\\n            this.setState({ ethprice: localStorage.getItem('ETH') });\\n            this.setState({ ltcprice: localStorage.getItem('LTC') });\\n        }\\n        setInterval(() => {\\n            axios.get('https://min-api.cryptocompare.com/data/pricemulti?fsyms=BTC,ETH,LTC&tsyms=USD')\\n                .then(response => {\\n                    this.sendPricePusher (response.data)\\n                })\\n                .catch(error => {\\n                    console.log(error)\\n                })\\n        }, 10000)\\n        this.prices.bind('prices', price => {\\n            this.setState({ btcAmount: price.prices.BTC.USD });\\n            localStorage.setItem('BTC', price.prices.BTC.USD);\\n            this.setState({ ethAmount: price.prices.ETH.USD });\\n            localStorage.setItem('ETH', price.prices.ETH.USD);\\n            this.setState({ ltcAmount: price.prices.LTC.USD });\\n            localStorage.setItem('LTC', price.prices.LTC.USD);\\n          }, this);\\n     }\\n\\n\\n    render() {\\n        const {btcAmount, ethAmount, ltcAmount} = this.state;\\n        return (\\n            <div className=\\\"today-container\\\">\\n                <div className=\\\"today-btc-container\\\">\\n                    <div className=\\\"today-btc-data-container\\\">\\n                        <div className=\\\"today-amount-container\\\">${btcAmount}</div>\\n                        <div className=\\\"today-unit-container\\\"> 1 BTC</div>\\n                    </div>\\n                </div>\\n                <div className=\\\"today-eth-container\\\">\\n                    <div className=\\\"today-eth-data-container\\\">\\n                        <div className=\\\"today-amount-container\\\">${ethAmount}</div>\\n                        <div className=\\\"today-unit-container\\\"> 1 ETH</div>\\n                    </div>\\n\\n                </div>\\n                <div className=\\\"today-ltc-container\\\">\\n                    <div className=\\\"today-ltc-data-container\\\">\\n                        <div className=\\\"today-amount-container\\\">${ltcAmount}</div>\\n                        <div className=\\\"today-unit-container\\\"> 1 LTC</div>\\n                    </div>\\n\\n                </div>\\n            </div>\\n        )\\n    }\\n}\\n\\nexport default Today\",\"/**\\n * Created by Nikita Mittal\\n * 28th Nov 2018\\n */\\n\\nimport React, { PureComponent } from 'react';\\nimport moment from 'moment'\\nimport map from 'lodash/map'\\nimport axios from 'axios';\\n\\n//import css\\nimport './History.css';\\n\\nclass History extends PureComponent {\\n\\n    constructor(props){\\n        super(props);\\n        this.state = {\\n            historyList : []\\n        }\\n    }\\n\\n    getETHPrices = (date) => {\\n        return axios.get('https://min-api.cryptocompare.com/data/pricehistorical?fsym=ETH&tsyms=USD&ts=' + date);\\n    }\\n    // This function gets the BTC price for a specific timestamp/date. The date is passed in as an argument\\n    getBTCPrices = (date) => {\\n        return axios.get('https://min-api.cryptocompare.com/data/pricehistorical?fsym=BTC&tsyms=USD&ts=' + date);\\n    }\\n    // This function gets the LTC price for a specific timestamp/date. The date is passed in as an argument\\n    getLTCPrices = (date) => {\\n        return axios.get('https://min-api.cryptocompare.com/data/pricehistorical?fsym=LTC&tsyms=USD&ts=' + date);\\n    }\\n\\n\\n    // This function gets the prices for the current date.\\n    getTodayPrice = () => {\\n        const {historyList} = this.state;\\n        let t = moment().unix()\\n        axios.all([this.getETHPrices(t), this.getBTCPrices(t), this.getLTCPrices(t)])\\n            .then(axios.spread((eth, btc, ltc) => {\\n                historyList.push({\\n                    date: moment().format(\\\"DD MMM YYYY\\\"),\\n                    eth: eth.data.ETH.USD,\\n                    btc: btc.data.BTC.USD,\\n                    ltc: ltc.data.LTC.USD\\n                })\\n                this.setState({\\n                    historyList: [...historyList]\\n                })\\n                \\n            }));\\n    }\\n    // This function gets the prices for the yesterday.\\n    getYesterdayPrice = () => {\\n        const {historyList} = this.state;\\n        let t = moment().subtract(1, 'days').unix();\\n        axios.all([this.getETHPrices(t), this.getBTCPrices(t), this.getLTCPrices(t)])\\n            .then(axios.spread((eth, btc, ltc) => {\\n                historyList.push({\\n                    date: moment().subtract(1, 'days').format(\\\"DD MMM YYYY\\\"),\\n                    eth: eth.data.ETH.USD,\\n                    btc: btc.data.BTC.USD,\\n                    ltc: ltc.data.LTC.USD\\n                })\\n                this.setState({\\n                    historyList: [...historyList]\\n                })\\n            }));\\n    }\\n    // This function gets the prices for the two days ago.\\n    getTwoDaysPrice = () => {\\n        let t = moment().subtract(2, 'days').unix();\\n        const {historyList} = this.state\\n        axios.all([this.getETHPrices(t), this.getBTCPrices(t), this.getLTCPrices(t)])\\n            .then(axios.spread((eth, btc, ltc) => {\\n                historyList.push({\\n                    date: moment().subtract(2, 'days').format(\\\"DD MMM YYYY\\\"),\\n                    eth: eth.data.ETH.USD,\\n                    btc: btc.data.BTC.USD,\\n                    ltc: ltc.data.LTC.USD\\n                })\\n                this.setState({\\n                    historyList: [...historyList]\\n                })\\n            }));\\n    }\\n    // This function gets the prices for the three days ago.\\n    getThreeDaysPrice = () => {\\n        const {historyList} = this.state\\n        let t = moment().subtract(3, 'days').unix();\\n        axios.all([this.getETHPrices(t), this.getBTCPrices(t), this.getLTCPrices(t)])\\n            .then(axios.spread((eth, btc, ltc) => {\\n                historyList.push({\\n                    date: moment().subtract(3, 'days').format(\\\"DD MMM YYYY\\\"),\\n                    eth: eth.data.ETH.USD,\\n                    btc: btc.data.BTC.USD,\\n                    ltc: ltc.data.LTC.USD\\n                })\\n                this.setState({\\n                    historyList: [...historyList]\\n                })\\n            }));\\n    }\\n    // This function gets the prices for the four days ago.\\n    getFourDaysPrice = () => {\\n        const {historyList} = this.state;\\n        let t = moment().subtract(4, 'days').unix();\\n        axios.all([this.getETHPrices(t), this.getBTCPrices(t), this.getLTCPrices(t)])\\n            .then(axios.spread((eth, btc, ltc) => {\\n                historyList.push({\\n                    date: moment().subtract(4, 'days').format(\\\"DD MMM YYYY\\\"),\\n                    eth: eth.data.ETH.USD,\\n                    btc: btc.data.BTC.USD,\\n                    ltc: ltc.data.LTC.USD\\n                })\\n                this.setState({\\n                    historyList: [...historyList]\\n                })\\n            }));\\n    }\\n    componentWillMount() {\\n        this.getTodayPrice();\\n        this.getYesterdayPrice();\\n        this.getTwoDaysPrice();\\n        this.getThreeDaysPrice();\\n        this.getFourDaysPrice();\\n    }\\n    render() {\\n        const {historyList} = this.state;\\n        console.log(\\\"History LIst\\\", historyList);\\n        return (\\n            <div className=\\\"history-container\\\">\\n            {historyList && historyList.length && map(historyList, (historyData, index) => {\\n                return (\\n                    <div key={index} className=\\\"history-date-data-container\\\">\\n                    <div className=\\\"history-btc-container\\\">\\n                        <div className=\\\"history-date-container\\\">{historyData.date}</div>\\n                        <div className=\\\"history-data-container\\\">1 BTC = ${historyData.btc}</div>\\n                    </div>\\n                    <div className=\\\"history-eth-container\\\">\\n                        <div>1 ETH = ${historyData.eth}</div>\\n                    </div>\\n                    <div className=\\\"history-ltc-container\\\">\\n                        <div>1 LTC = ${historyData.ltc}</div>\\n                    </div>\\n                  </div>\\n                )\\n\\n            })}\\n              \\n            </div>\\n        )\\n    }\\n}\\n\\nexport default History\\n\\n\",\"import React, { PureComponent } from 'react';\\nimport './App.css';\\n\\n//Custom Import \\nimport Today from './Today';\\nimport History from './History';\\n\\n\\nclass App extends PureComponent {\\n  render() {\\n    return (\\n      <div className=\\\"App\\\">\\n        <div className=\\\"top-header\\\">\\n        <div className=\\\"top-header-name\\\">Pusher Coins</div>\\n        <div className=\\\"top-header-link\\\">\\n          <a className=\\\"top-header-link-name\\\" href=\\\"https://pusher.com\\\" target=\\\"_blank\\\" rel=\\\"noopener noreferrer\\\">Pusher.com</a>\\n        </div>\\n        </div>\\n        <div className=\\\"page-content-container\\\">\\n          {/* <div className=\\\"sidebar\\\">\\n          <div className=\\\"side-bar-data\\\">\\n            Side bar data\\n          </div>\\n          </div> */}\\n          <div className=\\\"main-content\\\">\\n          <div className=\\\"main-content-data\\\">\\n          <div className=\\\"main-content-heading\\\">\\n            PusherCoins is a realtime price information about <br/>\\n            BTC, ETH and LTC\\n          </div>\\n          <div className=\\\"current-price-text\\\">Current price</div>\\n           <Today/>\\n           <div className=\\\"history-text\\\">History (Past 5 days)</div>\\n           <History/>\\n          </div>\\n          </div>\\n        </div>\\n      </div>\\n    );\\n  }\\n}\\n\\nexport default App;\\n\",\"// This optional code is used to register a service worker.\\n// register() is not called by default.\\n\\n// This lets the app load faster on subsequent visits in production, and gives\\n// it offline capabilities. However, it also means that developers (and users)\\n// will only see deployed updates on subsequent visits to a page, after all the\\n// existing tabs open on the page have been closed, since previously cached\\n// resources are updated in the background.\\n\\n// To learn more about the benefits of this model and instructions on how to\\n// opt-in, read http://bit.ly/CRA-PWA\\n\\nconst isLocalhost = Boolean(\\n  window.location.hostname === 'localhost' ||\\n    // [::1] is the IPv6 localhost address.\\n    window.location.hostname === '[::1]' ||\\n    // 127.0.0.1/8 is considered localhost for IPv4.\\n    window.location.hostname.match(\\n      /^127(?:\\\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\\n    )\\n);\\n\\nexport default function register(config) {\\n // console.log(\\\"Service register getting called\\\")\\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\\n    // The URL constructor is available in all browsers that support SW.\\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\\n    if (publicUrl.origin !== window.location.origin) {\\n      // Our service worker won't work if PUBLIC_URL is on a different origin\\n      // from what our page is served on. This might happen if a CDN is used to\\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\\n      return;\\n    }\\n\\n    window.addEventListener('load', () => {\\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\\n\\n      if (isLocalhost) {\\n        // This is running on localhost. Let's check if a service worker still exists or not.\\n        checkValidServiceWorker(swUrl, config);\\n\\n        // Add some additional logging to localhost, pointing developers to the\\n        // service worker/PWA documentation.\\n        navigator.serviceWorker.ready.then(() => {\\n          console.log(\\n            'This web app is being served cache-first by a service ' +\\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\\n          );\\n        });\\n      } else {\\n        // Is not localhost. Just register service worker\\n        registerValidSW(swUrl, config);\\n      }\\n    });\\n  }\\n}\\n\\nfunction registerValidSW(swUrl, config) {\\n  navigator.serviceWorker\\n    .register(swUrl)\\n    .then(registration => {\\n      registration.onupdatefound = () => {\\n        const installingWorker = registration.installing;\\n        if (installingWorker == null) {\\n          return;\\n        }\\n        installingWorker.onstatechange = () => {\\n          if (installingWorker.state === 'installed') {\\n            if (navigator.serviceWorker.controller) {\\n              // At this point, the updated precached content has been fetched,\\n              // but the previous service worker will still serve the older\\n              // content until all client tabs are closed.\\n              console.log(\\n                'New content is available and will be used when all ' +\\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\\n              );\\n\\n              // Execute callback\\n              if (config && config.onUpdate) {\\n                config.onUpdate(registration);\\n              }\\n            } else {\\n              // At this point, everything has been precached.\\n              // It's the perfect time to display a\\n              // \\\"Content is cached for offline use.\\\" message.\\n              console.log('Content is cached for offline use.');\\n\\n              // Execute callback\\n              if (config && config.onSuccess) {\\n                config.onSuccess(registration);\\n              }\\n            }\\n          }\\n        };\\n      };\\n    })\\n    .catch(error => {\\n      console.error('Error during service worker registration:', error);\\n    });\\n}\\n\\nfunction checkValidServiceWorker(swUrl, config) {\\n  // Check if the service worker can be found. If it can't reload the page.\\n  fetch(swUrl)\\n    .then(response => {\\n      // Ensure service worker exists, and that we really are getting a JS file.\\n      const contentType = response.headers.get('content-type');\\n      if (\\n        response.status === 404 ||\\n        (contentType != null && contentType.indexOf('javascript') === -1)\\n      ) {\\n        // No service worker found. Probably a different app. Reload the page.\\n        navigator.serviceWorker.ready.then(registration => {\\n          registration.unregister().then(() => {\\n            window.location.reload();\\n          });\\n        });\\n      } else {\\n        // Service worker found. Proceed as normal.\\n        registerValidSW(swUrl, config);\\n      }\\n    })\\n    .catch(() => {\\n      console.log(\\n        'No internet connection found. App is running in offline mode.'\\n      );\\n    });\\n}\\n\\nexport function unregister() {\\n  if ('serviceWorker' in navigator) {\\n    navigator.serviceWorker.ready.then(registration => {\\n      registration.unregister();\\n    });\\n  }\\n}\\n\",\"import React from 'react';\\nimport ReactDOM from 'react-dom';\\nimport './index.css';\\nimport App from './App';\\nimport serviceWorker from './serviceWorker';\\n\\nReactDOM.render(<App />, document.getElementById('root'));\\n\\n// If you want your app to work offline and load faster, you can change\\n// unregister() to register() below. Note this comes with some pitfalls.\\n// Learn more about service workers: http://bit.ly/CRA-PWA\\nserviceWorker();\\n\"]}","code":"(window.webpackJsonp=window.webpackJsonp||[]).push([[0],{172:function(t,e,a){},174:function(t,e,a){\"use strict\";a.r(e);var n=a(0),c=a.n(n),i=a(53),r=a.n(i),s=(a(61),a(7)),o=a(8),l=a(10),u=a(9),d=a(11),m=(a(63),a(1)),h=a.n(m),p=a(54),y=a.n(p),f=(a(84),function(t){function e(t){var a;return Object(s.a)(this,e),(a=Object(l.a)(this,Object(u.a)(e).call(this,t))).sendPricePusher=function(t){h.a.post(\"/prices/new\",{prices:t}).then(function(t){console.log(t)}).catch(function(t){console.log(t)})},a.state={btcAmount:\"\",ethAmount:\"\",ltcAmount:\"\"},a}return Object(d.a)(e,t),Object(o.a)(e,[{key:\"componentWillMount\",value:function(){this.pusher=new y.a(\"6abcd4a00181368360ec\",{cluster:\"ap2\",encrypted:!0}),this.prices=this.pusher.subscribe(\"coin-prices\")}},{key:\"componentDidMount\",value:function(){var t=this;navigator.onLine||(this.setState({btcprice:localStorage.getItem(\"BTC\")}),this.setState({ethprice:localStorage.getItem(\"ETH\")}),this.setState({ltcprice:localStorage.getItem(\"LTC\")})),setInterval(function(){h.a.get(\"https://min-api.cryptocompare.com/data/pricemulti?fsyms=BTC,ETH,LTC&tsyms=USD\").then(function(e){t.sendPricePusher(e.data)}).catch(function(t){console.log(t)})},1e4),this.prices.bind(\"prices\",function(e){t.setState({btcAmount:e.prices.BTC.USD}),localStorage.setItem(\"BTC\",e.prices.BTC.USD),t.setState({ethAmount:e.prices.ETH.USD}),localStorage.setItem(\"ETH\",e.prices.ETH.USD),t.setState({ltcAmount:e.prices.LTC.USD}),localStorage.setItem(\"LTC\",e.prices.LTC.USD)},this)}},{key:\"render\",value:function(){var t=this.state,e=t.btcAmount,a=t.ethAmount,n=t.ltcAmount;return c.a.createElement(\"div\",{className:\"today-container\"},c.a.createElement(\"div\",{className:\"today-btc-container\"},c.a.createElement(\"div\",{className:\"today-btc-data-container\"},c.a.createElement(\"div\",{className:\"today-amount-container\"},\"$\",e),c.a.createElement(\"div\",{className:\"today-unit-container\"},\" 1 BTC\"))),c.a.createElement(\"div\",{className:\"today-eth-container\"},c.a.createElement(\"div\",{className:\"today-eth-data-container\"},c.a.createElement(\"div\",{className:\"today-amount-container\"},\"$\",a),c.a.createElement(\"div\",{className:\"today-unit-container\"},\" 1 ETH\"))),c.a.createElement(\"div\",{className:\"today-ltc-container\"},c.a.createElement(\"div\",{className:\"today-ltc-data-container\"},c.a.createElement(\"div\",{className:\"today-amount-container\"},\"$\",n),c.a.createElement(\"div\",{className:\"today-unit-container\"},\" 1 LTC\"))))}}]),e}(n.PureComponent)),g=a(12),v=a(3),T=a.n(v),E=a(55),b=a.n(E),C=(a(172),function(t){function e(t){var a;return Object(s.a)(this,e),(a=Object(l.a)(this,Object(u.a)(e).call(this,t))).getETHPrices=function(t){return h.a.get(\"https://min-api.cryptocompare.com/data/pricehistorical?fsym=ETH&tsyms=USD&ts=\"+t)},a.getBTCPrices=function(t){return h.a.get(\"https://min-api.cryptocompare.com/data/pricehistorical?fsym=BTC&tsyms=USD&ts=\"+t)},a.getLTCPrices=function(t){return h.a.get(\"https://min-api.cryptocompare.com/data/pricehistorical?fsym=LTC&tsyms=USD&ts=\"+t)},a.getTodayPrice=function(){var t=a.state.historyList,e=T()().unix();h.a.all([a.getETHPrices(e),a.getBTCPrices(e),a.getLTCPrices(e)]).then(h.a.spread(function(e,n,c){t.push({date:T()().format(\"DD MMM YYYY\"),eth:e.data.ETH.USD,btc:n.data.BTC.USD,ltc:c.data.LTC.USD}),a.setState({historyList:Object(g.a)(t)})}))},a.getYesterdayPrice=function(){var t=a.state.historyList,e=T()().subtract(1,\"days\").unix();h.a.all([a.getETHPrices(e),a.getBTCPrices(e),a.getLTCPrices(e)]).then(h.a.spread(function(e,n,c){t.push({date:T()().subtract(1,\"days\").format(\"DD MMM YYYY\"),eth:e.data.ETH.USD,btc:n.data.BTC.USD,ltc:c.data.LTC.USD}),a.setState({historyList:Object(g.a)(t)})}))},a.getTwoDaysPrice=function(){var t=T()().subtract(2,\"days\").unix(),e=a.state.historyList;h.a.all([a.getETHPrices(t),a.getBTCPrices(t),a.getLTCPrices(t)]).then(h.a.spread(function(t,n,c){e.push({date:T()().subtract(2,\"days\").format(\"DD MMM YYYY\"),eth:t.data.ETH.USD,btc:n.data.BTC.USD,ltc:c.data.LTC.USD}),a.setState({historyList:Object(g.a)(e)})}))},a.getThreeDaysPrice=function(){var t=a.state.historyList,e=T()().subtract(3,\"days\").unix();h.a.all([a.getETHPrices(e),a.getBTCPrices(e),a.getLTCPrices(e)]).then(h.a.spread(function(e,n,c){t.push({date:T()().subtract(3,\"days\").format(\"DD MMM YYYY\"),eth:e.data.ETH.USD,btc:n.data.BTC.USD,ltc:c.data.LTC.USD}),a.setState({historyList:Object(g.a)(t)})}))},a.getFourDaysPrice=function(){var t=a.state.historyList,e=T()().subtract(4,\"days\").unix();h.a.all([a.getETHPrices(e),a.getBTCPrices(e),a.getLTCPrices(e)]).then(h.a.spread(function(e,n,c){t.push({date:T()().subtract(4,\"days\").format(\"DD MMM YYYY\"),eth:e.data.ETH.USD,btc:n.data.BTC.USD,ltc:c.data.LTC.USD}),a.setState({historyList:Object(g.a)(t)})}))},a.state={historyList:[]},a}return Object(d.a)(e,t),Object(o.a)(e,[{key:\"componentWillMount\",value:function(){this.getTodayPrice(),this.getYesterdayPrice(),this.getTwoDaysPrice(),this.getThreeDaysPrice(),this.getFourDaysPrice()}},{key:\"render\",value:function(){var t=this.state.historyList;return console.log(\"History LIst\",t),c.a.createElement(\"div\",{className:\"history-container\"},t&&t.length&&b()(t,function(t,e){return c.a.createElement(\"div\",{key:e,className:\"history-date-data-container\"},c.a.createElement(\"div\",{className:\"history-btc-container\"},c.a.createElement(\"div\",{className:\"history-date-container\"},t.date),c.a.createElement(\"div\",{className:\"history-data-container\"},\"1 BTC = $\",t.btc)),c.a.createElement(\"div\",{className:\"history-eth-container\"},c.a.createElement(\"div\",null,\"1 ETH = $\",t.eth)),c.a.createElement(\"div\",{className:\"history-ltc-container\"},c.a.createElement(\"div\",null,\"1 LTC = $\",t.ltc)))}))}}]),e}(n.PureComponent)),S=function(t){function e(){return Object(s.a)(this,e),Object(l.a)(this,Object(u.a)(e).apply(this,arguments))}return Object(d.a)(e,t),Object(o.a)(e,[{key:\"render\",value:function(){return c.a.createElement(\"div\",{className:\"App\"},c.a.createElement(\"div\",{className:\"top-header\"},c.a.createElement(\"div\",{className:\"top-header-name\"},\"Pusher Coins\"),c.a.createElement(\"div\",{className:\"top-header-link\"},c.a.createElement(\"a\",{className:\"top-header-link-name\",href:\"https://pusher.com\",target:\"_blank\",rel:\"noopener noreferrer\"},\"Pusher.com\"))),c.a.createElement(\"div\",{className:\"page-content-container\"},c.a.createElement(\"div\",{className:\"main-content\"},c.a.createElement(\"div\",{className:\"main-content-data\"},c.a.createElement(\"div\",{className:\"main-content-heading\"},\"PusherCoins is a realtime price information about \",c.a.createElement(\"br\",null),\"BTC, ETH and LTC\"),c.a.createElement(\"div\",{className:\"current-price-text\"},\"Current price\"),c.a.createElement(f,null),c.a.createElement(\"div\",{className:\"history-text\"},\"History (Past 5 days)\"),c.a.createElement(C,null)))))}}]),e}(n.PureComponent),D=Boolean(\"localhost\"===window.location.hostname||\"[::1]\"===window.location.hostname||window.location.hostname.match(/^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/));function P(t,e){navigator.serviceWorker.register(t).then(function(t){t.onupdatefound=function(){var a=t.installing;null!=a&&(a.onstatechange=function(){\"installed\"===a.state&&(navigator.serviceWorker.controller?(console.log(\"New content is available and will be used when all tabs for this page are closed. See http://bit.ly/CRA-PWA.\"),e&&e.onUpdate&&e.onUpdate(t)):(console.log(\"Content is cached for offline use.\"),e&&e.onSuccess&&e.onSuccess(t)))})}}).catch(function(t){console.error(\"Error during service worker registration:\",t)})}r.a.render(c.a.createElement(S,null),document.getElementById(\"root\")),function(t){if(\"serviceWorker\"in navigator){if(new URL(\"\",window.location.href).origin!==window.location.origin)return;window.addEventListener(\"load\",function(){var e=\"\".concat(\"\",\"/service-worker.js\");D?(function(t,e){fetch(t).then(function(a){var n=a.headers.get(\"content-type\");404===a.status||null!=n&&-1===n.indexOf(\"javascript\")?navigator.serviceWorker.ready.then(function(t){t.unregister().then(function(){window.location.reload()})}):P(t,e)}).catch(function(){console.log(\"No internet connection found. App is running in offline mode.\")})}(e,t),navigator.serviceWorker.ready.then(function(){console.log(\"This web app is being served cache-first by a service worker. To learn more, visit http://bit.ly/CRA-PWA\")})):P(e,t)})}}()},56:function(t,e,a){t.exports=a(174)},61:function(t,e,a){},63:function(t,e,a){},84:function(t,e,a){}},[[56,2,1]]]);","extractedComments":[]}