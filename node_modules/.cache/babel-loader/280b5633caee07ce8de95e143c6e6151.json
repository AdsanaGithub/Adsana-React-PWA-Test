{"ast":null,"code":"import _classCallCheck from \"/Users/nikitamittal/Documents/PWAProjects/pushercoins/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/nikitamittal/Documents/PWAProjects/pushercoins/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/nikitamittal/Documents/PWAProjects/pushercoins/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/nikitamittal/Documents/PWAProjects/pushercoins/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/nikitamittal/Documents/PWAProjects/pushercoins/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/Users/nikitamittal/Documents/PWAProjects/pushercoins/src/Today/Today.js\";\n\n/**\n * Created by Nikita Mittal\n * 28th Nov 2018\n */\nimport React, { PureComponent } from 'react';\nimport axios from 'axios';\nimport Pusher from 'pusher-js'; //import css\n\nimport './Today.css';\n\nvar Today =\n/*#__PURE__*/\nfunction (_PureComponent) {\n  _inherits(Today, _PureComponent);\n\n  function Today(props) {\n    var _this;\n\n    _classCallCheck(this, Today);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(Today).call(this, props));\n\n    _this.sendPricePusher = function (data) {\n      axios.post('/prices/new', {\n        prices: data\n      }).then(function (response) {\n        console.log(response);\n      }).catch(function (error) {\n        console.log(error);\n      });\n    };\n\n    _this.state = {\n      btcAmount: '',\n      ethAmount: '',\n      ltcAmount: ''\n    };\n    return _this;\n  }\n\n  _createClass(Today, [{\n    key: \"componentWillMount\",\n    value: function componentWillMount() {\n      // establish a connection to Pusher\n      this.pusher = new Pusher('6abcd4a00181368360ec', {\n        cluster: 'ap2',\n        encrypted: true\n      }); // Subscribe to the 'coin-prices' channel\n\n      this.prices = this.pusher.subscribe('coin-prices'); // axios.get('https://min-api.cryptocompare.com/data/pricemulti?fsyms=BTC,ETH,LTC&tsyms=USD')\n      //         .then(response => {\n      //             // We set the latest prices in the state to the prices gotten from Cryptocurrency.\n      //             //console.log(\"API calling success\", response)\n      //             this.setState({ btcAmount: response.data.BTC.USD });\n      //             this.setState({ ethAmount: response.data.ETH.USD });\n      //             this.setState({ ltcAmount: response.data.LTC.USD });\n      //         })\n      //         // Catch any error here\n      //         .catch(error => {\n      //             console.log(error)\n      //         })\n    }\n  }, {\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      var _this2 = this;\n\n      setInterval(function () {\n        axios.get('https://min-api.cryptocompare.com/data/pricemulti?fsyms=BTC,ETH,LTC&tsyms=USD').then(function (response) {\n          _this2.sendPricePusher(response.data);\n        }).catch(function (error) {\n          console.log(error);\n        });\n      }, 10000);\n      this.prices.bind('prices', function (price) {\n        _this2.setState({\n          btcAmount: price.prices.BTC.USD\n        });\n\n        localStorage.setItem('BTC', price.prices.BTC.USD);\n\n        _this2.setState({\n          ethAmount: price.prices.ETH.USD\n        });\n\n        localStorage.setItem('ETH', price.prices.ETH.USD);\n\n        _this2.setState({\n          ltcAmount: price.prices.LTC.USD\n        });\n\n        localStorage.setItem('LTC', price.prices.LTC.USD);\n      }, this);\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this$state = this.state,\n          btcAmount = _this$state.btcAmount,\n          ethAmount = _this$state.ethAmount,\n          ltcAmount = _this$state.ltcAmount;\n      return React.createElement(\"div\", {\n        className: \"today-container\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 82\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"today-btc-container\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 83\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"today-btc-data-container\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 84\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"today-amount-container\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 85\n        },\n        __self: this\n      }, \"$\", btcAmount), React.createElement(\"div\", {\n        className: \"today-unit-container\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 86\n        },\n        __self: this\n      }, \" 1 BTC\"))), React.createElement(\"div\", {\n        className: \"today-eth-container\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 89\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"today-eth-data-container\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 90\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"today-amount-container\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 91\n        },\n        __self: this\n      }, \"$\", ethAmount), React.createElement(\"div\", {\n        className: \"today-unit-container\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 92\n        },\n        __self: this\n      }, \" 1 ETH\"))), React.createElement(\"div\", {\n        className: \"today-ltc-container\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 96\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"today-ltc-data-container\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 97\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"today-amount-container\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 98\n        },\n        __self: this\n      }, \"$\", ltcAmount), React.createElement(\"div\", {\n        className: \"today-unit-container\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 99\n        },\n        __self: this\n      }, \" 1 LTC\"))));\n    }\n  }]);\n\n  return Today;\n}(PureComponent);\n\nexport default Today;","map":{"version":3,"sources":["/Users/nikitamittal/Documents/PWAProjects/pushercoins/src/Today/Today.js"],"names":["React","PureComponent","axios","Pusher","Today","props","sendPricePusher","data","post","prices","then","response","console","log","catch","error","state","btcAmount","ethAmount","ltcAmount","pusher","cluster","encrypted","subscribe","setInterval","get","bind","price","setState","BTC","USD","localStorage","setItem","ETH","LTC"],"mappings":"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","sourcesContent":["/**\n * Created by Nikita Mittal\n * 28th Nov 2018\n */\n\nimport React, { PureComponent } from 'react'\nimport axios from 'axios'\nimport Pusher from 'pusher-js'\n\n//import css\nimport './Today.css'\n\nclass Today extends PureComponent {\n\n    constructor(props){\n        super(props);\n        this.state = {\n            btcAmount: '',\n            ethAmount: '',\n            ltcAmount: ''\n        }\n    }\n\n    componentWillMount(){\n        // establish a connection to Pusher\n    this.pusher = new Pusher('6abcd4a00181368360ec', {\n        cluster: 'ap2',\n        encrypted: true\n    });\n    // Subscribe to the 'coin-prices' channel\n    this.prices = this.pusher.subscribe('coin-prices');\n        // axios.get('https://min-api.cryptocompare.com/data/pricemulti?fsyms=BTC,ETH,LTC&tsyms=USD')\n        //         .then(response => {\n        //             // We set the latest prices in the state to the prices gotten from Cryptocurrency.\n        //             //console.log(\"API calling success\", response)\n        //             this.setState({ btcAmount: response.data.BTC.USD });\n        //             this.setState({ ethAmount: response.data.ETH.USD });\n        //             this.setState({ ltcAmount: response.data.LTC.USD });\n        //         })\n        //         // Catch any error here\n        //         .catch(error => {\n        //             console.log(error)\n        //         })\n    }\n\n    sendPricePusher =  (data) => {\n        axios.post('/prices/new', {\n            prices: data\n        })\n          .then(response => {\n              console.log(response)\n          })\n          .catch(error => {\n              console.log(error)\n          })\n     }\n\n     componentDidMount () {\n        setInterval(() => {\n            axios.get('https://min-api.cryptocompare.com/data/pricemulti?fsyms=BTC,ETH,LTC&tsyms=USD')\n                .then(response => {\n                    this.sendPricePusher (response.data)\n                })\n                .catch(error => {\n                    console.log(error)\n                })\n        }, 10000)\n        this.prices.bind('prices', price => {\n            this.setState({ btcAmount: price.prices.BTC.USD });\n            localStorage.setItem('BTC', price.prices.BTC.USD);\n            this.setState({ ethAmount: price.prices.ETH.USD });\n            localStorage.setItem('ETH', price.prices.ETH.USD);\n            this.setState({ ltcAmount: price.prices.LTC.USD });\n            localStorage.setItem('LTC', price.prices.LTC.USD);\n          }, this);\n     }\n\n\n    render() {\n        const {btcAmount, ethAmount, ltcAmount} = this.state;\n        return (\n            <div className=\"today-container\">\n                <div className=\"today-btc-container\">\n                    <div className=\"today-btc-data-container\">\n                        <div className=\"today-amount-container\">${btcAmount}</div>\n                        <div className=\"today-unit-container\"> 1 BTC</div>\n                    </div>\n                </div>\n                <div className=\"today-eth-container\">\n                    <div className=\"today-eth-data-container\">\n                        <div className=\"today-amount-container\">${ethAmount}</div>\n                        <div className=\"today-unit-container\"> 1 ETH</div>\n                    </div>\n\n                </div>\n                <div className=\"today-ltc-container\">\n                    <div className=\"today-ltc-data-container\">\n                        <div className=\"today-amount-container\">${ltcAmount}</div>\n                        <div className=\"today-unit-container\"> 1 LTC</div>\n                    </div>\n\n                </div>\n            </div>\n        )\n    }\n}\n\nexport default Today"]},"metadata":{},"sourceType":"module"}