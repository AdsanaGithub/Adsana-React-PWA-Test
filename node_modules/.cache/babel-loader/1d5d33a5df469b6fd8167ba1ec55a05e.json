{"ast":null,"code":"import _toConsumableArray from \"/Users/nikitamittal/Documents/PWAProjects/pushercoins/node_modules/@babel/runtime/helpers/esm/toConsumableArray\";\nimport _classCallCheck from \"/Users/nikitamittal/Documents/PWAProjects/pushercoins/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/nikitamittal/Documents/PWAProjects/pushercoins/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/nikitamittal/Documents/PWAProjects/pushercoins/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/nikitamittal/Documents/PWAProjects/pushercoins/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/nikitamittal/Documents/PWAProjects/pushercoins/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/Users/nikitamittal/Documents/PWAProjects/pushercoins/src/History/History.js\";\n\n/**\n * Created by Nikita Mittal\n * 28th Nov 2018\n */\nimport React, { PureComponent } from 'react';\nimport moment from 'moment';\nimport map from 'lodash/map';\nimport axios from 'axios'; //import css\n\nimport './History.css';\n\nvar History =\n/*#__PURE__*/\nfunction (_PureComponent) {\n  _inherits(History, _PureComponent);\n\n  function History(props) {\n    var _this;\n\n    _classCallCheck(this, History);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(History).call(this, props));\n\n    _this.getETHPrices = function (date) {\n      return axios.get('https://min-api.cryptocompare.com/data/pricehistorical?fsym=ETH&tsyms=USD&ts=' + date);\n    };\n\n    _this.getBTCPrices = function (date) {\n      return axios.get('https://min-api.cryptocompare.com/data/pricehistorical?fsym=BTC&tsyms=USD&ts=' + date);\n    };\n\n    _this.getLTCPrices = function (date) {\n      return axios.get('https://min-api.cryptocompare.com/data/pricehistorical?fsym=LTC&tsyms=USD&ts=' + date);\n    };\n\n    _this.getTodayPrice = function () {\n      var historyList = _this.state.historyList;\n      var t = moment().unix();\n      axios.all([_this.getETHPrices(t), _this.getBTCPrices(t), _this.getLTCPrices(t)]).then(axios.spread(function (eth, btc, ltc) {\n        historyList.push({\n          date: moment().format(\"DD MMM YYYY\"),\n          eth: eth.data.ETH.USD,\n          btc: btc.data.BTC.USD,\n          ltc: ltc.data.LTC.USD\n        });\n\n        _this.setState({\n          historyList: _toConsumableArray(historyList)\n        });\n      }));\n    };\n\n    _this.getYesterdayPrice = function () {\n      var historyList = _this.state.historyList;\n      var t = moment().subtract(1, 'days').unix();\n      axios.all([_this.getETHPrices(t), _this.getBTCPrices(t), _this.getLTCPrices(t)]).then(axios.spread(function (eth, btc, ltc) {\n        historyList.push({\n          date: moment().subtract(1, 'days').format(\"DD MMM YYYY\"),\n          eth: eth.data.ETH.USD,\n          btc: btc.data.BTC.USD,\n          ltc: ltc.data.LTC.USD\n        });\n\n        _this.setState({\n          historyList: _toConsumableArray(historyList)\n        });\n      }));\n    };\n\n    _this.getTwoDaysPrice = function () {\n      var t = moment().subtract(2, 'days').unix();\n      var historyList = _this.state.historyList;\n      axios.all([_this.getETHPrices(t), _this.getBTCPrices(t), _this.getLTCPrices(t)]).then(axios.spread(function (eth, btc, ltc) {\n        historyList.push({\n          date: moment().subtract(2, 'days').format(\"DD MMM YYYY\"),\n          eth: eth.data.ETH.USD,\n          btc: btc.data.BTC.USD,\n          ltc: ltc.data.LTC.USD\n        });\n\n        _this.setState({\n          historyList: _toConsumableArray(historyList)\n        });\n      }));\n    };\n\n    _this.getThreeDaysPrice = function () {\n      var historyList = _this.state.historyList;\n      var t = moment().subtract(3, 'days').unix();\n      axios.all([_this.getETHPrices(t), _this.getBTCPrices(t), _this.getLTCPrices(t)]).then(axios.spread(function (eth, btc, ltc) {\n        historyList.push({\n          date: moment().subtract(3, 'days').format(\"DD MMM YYYY\"),\n          eth: eth.data.ETH.USD,\n          btc: btc.data.BTC.USD,\n          ltc: ltc.data.LTC.USD\n        });\n\n        _this.setState({\n          historyList: _toConsumableArray(historyList)\n        });\n      }));\n    };\n\n    _this.getFourDaysPrice = function () {\n      var historyList = _this.state.historyList;\n      var t = moment().subtract(4, 'days').unix();\n      axios.all([_this.getETHPrices(t), _this.getBTCPrices(t), _this.getLTCPrices(t)]).then(axios.spread(function (eth, btc, ltc) {\n        historyList.push({\n          date: moment().subtract(4, 'days').format(\"DD MMM YYYY\"),\n          eth: eth.data.ETH.USD,\n          btc: btc.data.BTC.USD,\n          ltc: ltc.data.LTC.USD\n        });\n\n        _this.setState({\n          historyList: _toConsumableArray(historyList)\n        });\n      }));\n    };\n\n    _this.state = {\n      historyList: []\n    };\n    return _this;\n  }\n\n  _createClass(History, [{\n    key: \"componentWillMount\",\n    value: function componentWillMount() {\n      this.getTodayPrice();\n      this.getYesterdayPrice();\n      this.getTwoDaysPrice();\n      this.getThreeDaysPrice();\n      this.getFourDaysPrice();\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var historyList = this.state.historyList;\n      console.log(\"History LIst\", historyList);\n      return React.createElement(\"div\", {\n        className: \"history-container\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 133\n        },\n        __self: this\n      }, historyList && historyList.length && map(historyList, function (historyData, index) {\n        return React.createElement(\"div\", {\n          key: index,\n          className: \"history-date-data-container\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 136\n          },\n          __self: this\n        }, React.createElement(\"div\", {\n          className: \"history-btc-container\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 137\n          },\n          __self: this\n        }, React.createElement(\"div\", {\n          className: \"history-date-container\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 138\n          },\n          __self: this\n        }, historyData.date), React.createElement(\"div\", {\n          className: \"history-data-container\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 139\n          },\n          __self: this\n        }, \"1 BTC = $$\", historyData.btc)), React.createElement(\"div\", {\n          className: \"history-eth-container\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 141\n          },\n          __self: this\n        }, React.createElement(\"div\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 142\n          },\n          __self: this\n        }, \"1 ETH = $$\", historyData.eth)), React.createElement(\"div\", {\n          className: \"history-ltc-container\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 144\n          },\n          __self: this\n        }, React.createElement(\"div\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 145\n          },\n          __self: this\n        }, \"1 LTC = $$\", historyData.ltc)));\n      }));\n    }\n  }]);\n\n  return History;\n}(PureComponent);\n\nexport default History;","map":{"version":3,"sources":["/Users/nikitamittal/Documents/PWAProjects/pushercoins/src/History/History.js"],"names":["React","PureComponent","moment","map","axios","History","props","getETHPrices","date","get","getBTCPrices","getLTCPrices","getTodayPrice","historyList","state","t","unix","all","then","spread","eth","btc","ltc","push","format","data","ETH","USD","BTC","LTC","setState","getYesterdayPrice","subtract","getTwoDaysPrice","getThreeDaysPrice","getFourDaysPrice","console","log","length","historyData","index"],"mappings":"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","sourcesContent":["/**\n * Created by Nikita Mittal\n * 28th Nov 2018\n */\n\nimport React, { PureComponent } from 'react';\nimport moment from 'moment'\nimport map from 'lodash/map'\nimport axios from 'axios';\n\n//import css\nimport './History.css';\n\nclass History extends PureComponent {\n\n    constructor(props){\n        super(props);\n        this.state = {\n            historyList : []\n        }\n    }\n\n    getETHPrices = (date) => {\n        return axios.get('https://min-api.cryptocompare.com/data/pricehistorical?fsym=ETH&tsyms=USD&ts=' + date);\n    }\n    // This function gets the BTC price for a specific timestamp/date. The date is passed in as an argument\n    getBTCPrices = (date) => {\n        return axios.get('https://min-api.cryptocompare.com/data/pricehistorical?fsym=BTC&tsyms=USD&ts=' + date);\n    }\n    // This function gets the LTC price for a specific timestamp/date. The date is passed in as an argument\n    getLTCPrices = (date) => {\n        return axios.get('https://min-api.cryptocompare.com/data/pricehistorical?fsym=LTC&tsyms=USD&ts=' + date);\n    }\n\n\n    // This function gets the prices for the current date.\n    getTodayPrice = () => {\n        const {historyList} = this.state;\n        let t = moment().unix()\n        axios.all([this.getETHPrices(t), this.getBTCPrices(t), this.getLTCPrices(t)])\n            .then(axios.spread((eth, btc, ltc) => {\n                historyList.push({\n                    date: moment().format(\"DD MMM YYYY\"),\n                    eth: eth.data.ETH.USD,\n                    btc: btc.data.BTC.USD,\n                    ltc: ltc.data.LTC.USD\n                })\n                this.setState({\n                    historyList: [...historyList]\n                })\n                \n            }));\n    }\n    // This function gets the prices for the yesterday.\n    getYesterdayPrice = () => {\n        const {historyList} = this.state;\n        let t = moment().subtract(1, 'days').unix();\n        axios.all([this.getETHPrices(t), this.getBTCPrices(t), this.getLTCPrices(t)])\n            .then(axios.spread((eth, btc, ltc) => {\n                historyList.push({\n                    date: moment().subtract(1, 'days').format(\"DD MMM YYYY\"),\n                    eth: eth.data.ETH.USD,\n                    btc: btc.data.BTC.USD,\n                    ltc: ltc.data.LTC.USD\n                })\n                this.setState({\n                    historyList: [...historyList]\n                })\n            }));\n    }\n    // This function gets the prices for the two days ago.\n    getTwoDaysPrice = () => {\n        let t = moment().subtract(2, 'days').unix();\n        const {historyList} = this.state\n        axios.all([this.getETHPrices(t), this.getBTCPrices(t), this.getLTCPrices(t)])\n            .then(axios.spread((eth, btc, ltc) => {\n                historyList.push({\n                    date: moment().subtract(2, 'days').format(\"DD MMM YYYY\"),\n                    eth: eth.data.ETH.USD,\n                    btc: btc.data.BTC.USD,\n                    ltc: ltc.data.LTC.USD\n                })\n                this.setState({\n                    historyList: [...historyList]\n                })\n            }));\n    }\n    // This function gets the prices for the three days ago.\n    getThreeDaysPrice = () => {\n        const {historyList} = this.state\n        let t = moment().subtract(3, 'days').unix();\n        axios.all([this.getETHPrices(t), this.getBTCPrices(t), this.getLTCPrices(t)])\n            .then(axios.spread((eth, btc, ltc) => {\n                historyList.push({\n                    date: moment().subtract(3, 'days').format(\"DD MMM YYYY\"),\n                    eth: eth.data.ETH.USD,\n                    btc: btc.data.BTC.USD,\n                    ltc: ltc.data.LTC.USD\n                })\n                this.setState({\n                    historyList: [...historyList]\n                })\n            }));\n    }\n    // This function gets the prices for the four days ago.\n    getFourDaysPrice = () => {\n        const {historyList} = this.state;\n        let t = moment().subtract(4, 'days').unix();\n        axios.all([this.getETHPrices(t), this.getBTCPrices(t), this.getLTCPrices(t)])\n            .then(axios.spread((eth, btc, ltc) => {\n                historyList.push({\n                    date: moment().subtract(4, 'days').format(\"DD MMM YYYY\"),\n                    eth: eth.data.ETH.USD,\n                    btc: btc.data.BTC.USD,\n                    ltc: ltc.data.LTC.USD\n                })\n                this.setState({\n                    historyList: [...historyList]\n                })\n            }));\n    }\n    componentWillMount() {\n        this.getTodayPrice();\n        this.getYesterdayPrice();\n        this.getTwoDaysPrice();\n        this.getThreeDaysPrice();\n        this.getFourDaysPrice();\n    }\n    render() {\n        const {historyList} = this.state;\n        console.log(\"History LIst\", historyList);\n        return (\n            <div className=\"history-container\">\n            {historyList && historyList.length && map(historyList, (historyData, index) => {\n                return (\n                    <div key={index} className=\"history-date-data-container\">\n                    <div className=\"history-btc-container\">\n                        <div className=\"history-date-container\">{historyData.date}</div>\n                        <div className=\"history-data-container\">1 BTC = $${historyData.btc}</div>\n                    </div>\n                    <div className=\"history-eth-container\">\n                        <div>1 ETH = $${historyData.eth}</div>\n                    </div>\n                    <div className=\"history-ltc-container\">\n                        <div>1 LTC = $${historyData.ltc}</div>\n                    </div>\n                  </div>\n                )\n\n            })}\n              \n            </div>\n        )\n    }\n}\n\nexport default History\n\n"]},"metadata":{},"sourceType":"module"}